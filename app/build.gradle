apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.github.ggaier.jkmovie"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })
    testCompile 'junit:junit:4.12'


    compile "com.android.support:appcompat-v7:$support_version"
    compile "com.android.support.constraint:constraint-layout:$constraint_layout_version"
    compile "com.android.support:design:$support_version"
    compile "com.android.support:support-v4:$support_version"

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.jetbrains.anko:anko:$anko_version"

    compile "android.arch.lifecycle:runtime:$architecture_component_version"
    compile "android.arch.lifecycle:extensions:$architecture_component_version"
    kapt "android.arch.lifecycle:compiler:$architecture_component_version"
    compile "android.arch.persistence.room:runtime:$architecture_component_version"
    kapt "android.arch.persistence.room:compiler:$architecture_component_version"
    testCompile("android.arch.persistence.room:testing:$architecture_component_version", {
        exclude group: 'com.google.code.gson' // exclude version 2.8
    })
    compile "android.arch.persistence.room:rxjava2:$architecture_component_version"

    compile "com.squareup.retrofit2:retrofit:$retrofit_version"
    compile "com.squareup.retrofit2:adapter-rxjava:$retrofit_version"
    compile "com.squareup.retrofit2:converter-gson:$retrofit_version"


    compile "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    compile "com.google.dagger:dagger:$dagger_version"
    compile "com.google.dagger:dagger-android-support:$dagger_version"
    // if you use the support libraries
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    compile "com.orhanobut:logger:${logger_version}"

}

configurations.all {
    resolutionStrategy {
        force "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    }
}